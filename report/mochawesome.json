{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-06T18:40:35.469Z",
    "end": "2023-11-06T18:40:36.772Z",
    "duration": 1303,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "487ed772-3702-40ec-a14f-fdc747a16d21",
      "title": "",
      "fullFile": "/Users/jgartland/Projects/node-20/mocha-sandbox/ApiTestFramework/src/test/users.spec.ts",
      "file": "/src/test/users.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c603ad3c-b772-43e1-9131-3e90e0f7235b",
          "title": "Test ReqRes APIs",
          "fullFile": "/Users/jgartland/Projects/node-20/mocha-sandbox/ApiTestFramework/src/test/users.spec.ts",
          "file": "/src/test/users.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate create user admin",
              "fullTitle": "Test ReqRes APIs should validate create user admin",
              "timedOut": false,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var startTime, response, responseBody;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        startTime = perf_hooks_1.performance.now();\n                        return [4 /*yield*/, supertest_1.request.post('users').send(user)];\n                    case 1:\n                        response = _a.sent();\n                        (0, chai_1.expect)(perf_hooks_1.performance.now() - startTime).to.be.lessThan(2000);\n                        (0, chai_1.expect)(response.statusCode).to.equal(201);\n                        (0, chai_1.expect)(response.type).to.equal(\"application/json\");\n                        responseBody = response.body;\n                        (0, chai_1.expect)((0, jsonschema_1.validate)(responseBody, userchema_json_1.default).valid).to.be.true;\n                        (0, chai_1.expect)((0, jsonschema_1.validate)(responseBody, userchema_json_1.default).errors.length).to.equal(0);\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "cac6a12a-1efc-4625-bb97-5f1fa606b203",
              "parentUUID": "c603ad3c-b772-43e1-9131-3e90e0f7235b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate create user Sexton",
              "fullTitle": "Test ReqRes APIs should validate create user Sexton",
              "timedOut": false,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var startTime, response, responseBody;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        startTime = perf_hooks_1.performance.now();\n                        return [4 /*yield*/, supertest_1.request.post('users').send(user)];\n                    case 1:\n                        response = _a.sent();\n                        (0, chai_1.expect)(perf_hooks_1.performance.now() - startTime).to.be.lessThan(2000);\n                        (0, chai_1.expect)(response.statusCode).to.equal(201);\n                        (0, chai_1.expect)(response.type).to.equal(\"application/json\");\n                        responseBody = response.body;\n                        (0, chai_1.expect)((0, jsonschema_1.validate)(responseBody, userchema_json_1.default).valid).to.be.true;\n                        (0, chai_1.expect)((0, jsonschema_1.validate)(responseBody, userchema_json_1.default).errors.length).to.equal(0);\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "55d22e87-995c-4df5-8dcd-8c875c45d418",
              "parentUUID": "c603ad3c-b772-43e1-9131-3e90e0f7235b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate create user Farrell",
              "fullTitle": "Test ReqRes APIs should validate create user Farrell",
              "timedOut": false,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var startTime, response, responseBody;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        startTime = perf_hooks_1.performance.now();\n                        return [4 /*yield*/, supertest_1.request.post('users').send(user)];\n                    case 1:\n                        response = _a.sent();\n                        (0, chai_1.expect)(perf_hooks_1.performance.now() - startTime).to.be.lessThan(2000);\n                        (0, chai_1.expect)(response.statusCode).to.equal(201);\n                        (0, chai_1.expect)(response.type).to.equal(\"application/json\");\n                        responseBody = response.body;\n                        (0, chai_1.expect)((0, jsonschema_1.validate)(responseBody, userchema_json_1.default).valid).to.be.true;\n                        (0, chai_1.expect)((0, jsonschema_1.validate)(responseBody, userchema_json_1.default).errors.length).to.equal(0);\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "f70c2917-34ec-48e5-8abf-18602f250a32",
              "parentUUID": "c603ad3c-b772-43e1-9131-3e90e0f7235b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cac6a12a-1efc-4625-bb97-5f1fa606b203",
            "55d22e87-995c-4df5-8dcd-8c875c45d418",
            "f70c2917-34ec-48e5-8abf-18602f250a32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1296,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report"
      },
      "version": "6.2.0"
    }
  }
}